/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java'
}

dependencies {
    implementation project(':data-prepper-api')
    implementation project(':data-prepper-plugins:buffer-common')
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    implementation 'org.apache.avro:avro:1.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'io.micrometer:micrometer-core'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
 /*   implementation 'io.confluent:kafka-avro-serializer:7.3.3'
    implementation 'io.confluent:kafka-schema-registry-client:7.3.3'
    implementation 'io.confluent:kafka-avro-serializer:7.3.3'
    implementation 'io.confluent:kafka-schema-registry-client:7.3.3'
    implementation 'io.confluent:kafka-schema-registry:7.3.3:tests'*/
    implementation 'software.amazon.msk:aws-msk-iam-auth:1.1.6'
    implementation 'software.amazon.awssdk:sts:2.20.103'
    implementation 'software.amazon.awssdk:auth:2.20.103'
    implementation 'software.amazon.awssdk:kafka:2.20.103'
    implementation 'software.amazon.glue:schema-registry-serde:1.1.15'
    implementation 'com.amazonaws:aws-java-sdk-glue:1.12.506'
//    implementation 'io.confluent:kafka-json-schema-serializer:7.4.0'
    testImplementation 'org.mockito:mockito-inline:4.1.0'
    testImplementation 'org.yaml:snakeyaml:2.0'
    testImplementation testLibs.spring.test
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
    testImplementation project(':data-prepper-test-common')
    testImplementation project(':data-prepper-plugins:blocking-buffer')
    testImplementation project(':data-prepper-core')
    testImplementation 'org.mockito:mockito-inline:4.1.0'
    testImplementation 'org.apache.kafka:kafka_2.13:3.4.0'
    testImplementation 'org.apache.kafka:kafka_2.13:3.4.0:test'
    testImplementation 'org.apache.curator:curator-test:5.5.0'
//    testImplementation 'io.confluent:kafka-schema-registry:7.4.0'
    testImplementation testLibs.junit.vintage
    testImplementation 'org.apache.kafka:kafka-clients:3.4.0:test'
    testImplementation 'org.apache.kafka:connect-json:3.4.0'
    testImplementation('com.kjetland:mbknor-jackson-jsonschema_2.13:1.0.39')
    implementation project(':data-prepper-plugins:failures-common')
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
    implementation 'org.apache.kafka:connect-json:3.4.0'
    implementation 'com.github.fge:json-schema-validator:2.2.14'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:apache-client'

    implementation files('lib/kafka-avro-serializer-7.4.0.jar')
    implementation files('lib/kafka-schema-registry-client-7.4.0.jar')
    implementation files('lib/kafka-schema-serializer-7.4.0.jar')
    implementation files('lib/logredactor-1.0.12.jar')
    implementation files('lib/kafka-json-schema-serializer-5.5.0.jar')
    implementation files('lib/kafka-rest-6.2.0.jar')
    implementation files('lib/kafka-json-serializer-2.0.0.jar')


}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs

    useJUnitPlatform()

    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperty 'tests.kafka.bootstrap_servers', System.getProperty('tests.kafka.bootstrap_servers')
    systemProperty 'tests.kafka.saslssl_bootstrap_servers', System.getProperty('tests.kafka.saslssl_bootstrap_servers')
    systemProperty 'tests.kafka.ssl_bootstrap_servers', System.getProperty('tests.kafka.ssl_bootstrap_servers')
    systemProperty 'tests.kafka.saslplain_bootstrap_servers', System.getProperty('tests.kafka.saslplain_bootstrap_servers')
    systemProperty 'tests.kafka.username', System.getProperty('tests.kafka.username')
    systemProperty 'tests.kafka.password', System.getProperty('tests.kafka.password')
    systemProperty 'tests.kafka.glue_registry_name', System.getProperty('tests.kafka.glue_registry_name')
    systemProperty 'tests.kafka.glue_json_schema_name', System.getProperty('tests.kafka.glue_json_schema_name')
    systemProperty 'tests.kafka.glue_avro_schema_name', System.getProperty('tests.kafka.glue_avro_schema_name')
    systemProperty 'tests.msk.region', System.getProperty('tests.msk.region')
    systemProperty 'tests.msk.arn', System.getProperty('tests.msk.arn')

    filter {
        includeTestsMatching '*IT'
    }
}

