log-pipeline :
  source :
    random:
  sink :
    - kafka:
        tags_target_key: Tag
        bootstrap_servers:
          - "pkc-l7pr2.ap-south-1.aws.confluent.cloud:9092"
        thread_wait_time: 1000
        dlq:
          s3:
            bucket: "mydlqtestbucket"
            key_path_prefix: "dlq-files/"
            sts_role_arn: "arn:aws:iam::045129910014:role/dataprepper"
            region: "ap-south-1"
        partition_key: rec-${length(/message)}
        serde_format: json
        topic:
          name: json_schemaregistry_topic6
          is_create: true
          number_of_partitions: 1
          replication_factor: 3
#        schema:
#          registry_url:  http://localhost:8085
#          is_create: true
#          inline_schema: "{\n    \"schema\": \"{\\\"type\\\": \\\"object\\\", \\\"properties\\\": {\\\"message\\\": {\\\"type\\\": \\\"string\\\"}}}\",\n    \"references\": [],\n    \"schemaType\": \"JSON\",\n    \"name\": \"MySchema\"\n}"
#          schema_file_location: "D:\\project_aws\\json_schema.txt"
#          s3_file_config:
#            bucket_name: schemaconfuration
#            file_key: json_schema.txt
#            region: "ap-south-1"
        producer_properties:
          buffer_memory: 10mb
          compression_type: gzip
          retries: 3
          batch_size: 16384
          client_dns_lookup: use_all_dns_ips
          connections_max_idle: PT2M
          delivery_timeout: PT2M
          linger_ms: 0
          max_block: PT2M
          max_request_size: 1048576
          partitioner_class: org.apache.kafka.clients.producer.internals.DefaultPartitioner
          partitioner_ignore_keys: false
          receive_buffer: 3mb
          request_timeout: PT2M
          send_buffer: 2mb
          socket_connection_setup_timeout_max: PT2M
          socket_connection_setup_timeout: PT2M
          acks: all
          enable_idempotence: true
          max_in_flight_requests_per_connection: 5
          metadata_max_age: PT2M
          metadata_max_idle: PT2M
          metrics_num_samples: 2
          metrics_recording_level: INFO
          metrics_sample_window: PT2M
          partitioner_adaptive_partitioning_enable: true
          partitioner_availability_timeout: PT2M
          reconnect_backoff_max: PT2M
          reconnect_backoff: PT2M
          retry_backoff: PT2M
        authentication:
          sasl:
            oauth:
              oauth_client_id: 0oa9wc21447Pc5vsV5d7
              oauth_client_secret: aGmOfHqIEvBJGDxXAOOcatiE9PvsPgoEePx8IPPa
              oauth_login_server: https://dev-13650048.okta.com
              oauth_login_endpoint: /oauth2/default/v1/token
              oauth_login_grant_type: refresh_token
              oauth_login_scope: kafka
              oauth_introspect_server: https://dev-13650048.okta.com
              oauth_introspect_endpoint: /oauth2/default/v1/introspect
              oauth_token_endpoint_url: https://dev-13650048.okta.com/oauth2/default/v1/token
              oauth_sasl_mechanism: OAUTHBEARER
              oauth_security_protocol: SASL_SSL
              oauth_sasl_login_callback_handler_class: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
              oauth_jwks_endpoint_url: https://dev-13650048.okta.com/oauth2/default/v1/keys
              extension_logicalCluster: lkc-23yq8q
              extension_identityPoolId: pool-kz0k
